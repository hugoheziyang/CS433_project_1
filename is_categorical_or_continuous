def is_categorical(X):

    # Function
    # ---------
    # Separates the features into categorical or continuous
    # For now, done by hand due to the nature of the provided data

    # Inputs
    # ---------
    # X       : (N x M) with N samples, M features
    
    # Outputs
    # ---------
    # categorical_idx   :     (1 x p) array containing the indices of the p features marked as categorical
    # continuous_idx    :     (1 x M-p) array containing the indices of the M-p features marked as continuous

    # Get the number of features M 
    M = X.shape[1]                                         # X.shape returns [#lines, #columns] of X

    # CSV has the following shape : [       A               B             C             D            ...   letter n° M+1 ]
    #                               [Id of the sample    _State         FMONTH          IDATE        ...   Feature n° M  ]
    #                               [Not a feature       Feature n°1   Feature n°2      Feature n°3  ...   Feature n° M  ]
    #                               [      idx[0]         idx[1]        idx[2]          idx[3]]      ...       idx[M]

    # The first column A is for the Id of the samples, not a feature.   Column A corresponds to idx[0]
    # The second column B is for _State, the first feature.             Column B corresponds to idx[1]

    # The indexing will follow : categorical_idx = [1, 4, 5, ...] means columns B, E, F are categorical


    categorical_idx = [0, 1, 3, 7, 9, 25]                  # features you marked as categorical
    continuous_idx  = [i for i in range(M) if i not in categorical_idx]

    return categorical_idx, continuous_idx

# --------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------------------------------
